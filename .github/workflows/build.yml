name: Build and Package App with cx-freeze

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build-all:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cx-freeze and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx-freeze
          pip install -r requirements.txt

      - name: Create setup.py for cx-freeze
        run: |
          echo "from cx_Freeze import setup, Executable" > setup.py
          echo "import sys" >> setup.py
          echo "base = None" >> setup.py
          echo "executables = []" >> setup.py
          echo "if sys.platform == 'win32':" >> setup.py
          echo "    base = 'Win32GUI'" >> setup.py
          echo "    executables.append(Executable('App_PP.py', base=base, icon='icon.ico', target_name='Kaalen-v.1.0.exe'))" >> setup.py
          echo "elif sys.platform == 'darwin':" >> setup.py
          echo "    executables.append(Executable('App_PP.py', target_name='Kaalen-v.1.0.app'))" >> setup.py
          echo "elif sys.platform.startswith('linux'):" >> setup.py
          echo "    executables.append(Executable('App_PP.py', target_name='Kaalen-v.1.0'))" >> setup.py
          echo "setup(" >> setup.py
          echo "    name = 'Kaalen'," >> setup.py
          echo "    version = '1.0'," >> setup.py
          echo "    description = 'Kaalen 2D Signal Plotter App'," >> setup.py
          echo "    executables = executables" >> setup.py
          echo ")" >> setup.py
        shell: bash

      - name: Build with cx-freeze
        run: python setup.py build

      - name: Install zip/unzip on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Prepare build artifact
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            7z a build/Kaalen-windows.zip build/exe.*/*
          elif [ "$RUNNER_OS" == "macOS" ]; then
            zip -r build/Kaalen-macos.zip build/exe.*/*
          elif [ "$RUNNER_OS" == "Linux" ]; then
            zip -r build/Kaalen-linux.zip build/exe.*/*
          fi

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/Kaalen-windows.zip
            build/Kaalen-macos.zip
            build/Kaalen-linux.zip
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}
          body: |
            This is an automated release.
            
            This release includes standalone executables for Windows, macOS, and Linux.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
